name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev  # Ajoute d'autres branches si nécessaire
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    name: 🔍 Exécuter les tests avec pytest
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v3

      - name: 🏗️ Installer Python et les dépendances
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 📦 Installer les dépendances
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: ✅ Lancer les tests avec pytest
        run: pytest tests/ --disable-warnings --maxfail=1

  build:
    name: 🐳 Construire et tester l'image Docker
    runs-on: ubuntu-latest
    needs: test  # Exécuter après les tests

    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v3

      - name: 🔨 Construire l’image Docker
        run: docker build -t chat_dog_classification-api .

      - name: 🚀 Lancer le conteneur et tester l’API
        run: |
          docker run -d -p 8000:8000 --name test_api chat_dog_classification-api
          sleep 5  # Attendre que l'API démarre
          curl -f http://localhost:8000/docs || exit 1

  deploy:
    name: 📦 Publier l’image sur Docker Hub
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Ne push que sur la branche principale

    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v3

      - name: 🔐 Se connecter à Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Tagger et push l’image Docker
        run: |
          docker tag chat_dog_classification-api ${{ secrets.DOCKER_USERNAME }}/chat_dog_classification-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/chat_dog_classification-api:latest
